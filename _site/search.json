[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction",
    "section": "",
    "text": "The COVID-19 pandemic has had a significant impact on the world, and the United States has been hit particularly hard. With millions of reported cases and hundreds of thousands of deaths, the need for accurate data analysis has become increasingly important. This data analysis project focuses on the cases and deaths related to COVID-19 in the United States and my home state, Oregon. The goal of this project is to explore and compare the trends in cases and deaths in both areas."
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "Knowing this information is important in several ways. It enables policymakers to tailor measure such as social distancing and stay-at-home orders to specific regions, thereby reducing the overall spread of the virus. Additionally, understanding which areas have been most affected by the pandemic can help identify population groups that may be at higher risk. Finally, tracking trends can help identify areas where the virus is spreading more rapidly and inform decisions around the allocation of resources and policy interventions. Overall, knowing areas with high numbers and percents of COVID-19 cases and deaths is critical in the fight against the pandemic and minimizing its impact on individuals and communities.\n\nUnited States\n\nAboutNumber of CasesPercent of CasesNumber of DeathsPercent of Deaths\n\n\nThis section presents a detailed examination of COVID-19 cases and deaths in the United States.\n\n\n\n\n\n\n\n\n\nWith 12,112,791 total cases, California has the most cases of COVID-19.\nFollowed by Texas with 8,337,836 total cases\nThen, Florida (7,531,055 total cases), New York (6,786,691 total cases), and Illinois (4,080,183 total cases).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAs of 2023-03-07, Rhode Island has the highest percent of COVID-19 cases per population, with 43.43%.\nAlaska has the second highest percent of COVID-19 cases with 42.1% of the population catching COVID-19, followed by Kentucky (38.46%), North Dakota (37.65%), and Tennessee (35.83%).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAs of 2023-03-07, California has the most COVID-19 related deaths, with 103,753 total deaths.\nTexas has the second most number of COVID-19 related deaths with 94,170 total deaths, followed by Florida (86,850 total deaths), New York (79,689 total deaths), and Pennsylvania (50,360 total deaths).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAs of 2023-03-07, Arizona has the highest percent of COVID-19 deaths per population, with 0.454%.\nWest Virginia has the second highest percent of COVID-19 deaths with 0.45% of the population dying from COVID-19, followed by Mississippi (0.45%), Alabama (0.439%), and New Mexico (0.433%).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOregon\n\nAboutNumber of CasesPercent of CasesNumber of DeathsPercent of Deaths\n\n\nThis section presents a detailed examination of COVID-19 cases and deaths in the Oregon.\n\n\n\n\n\n\n\n\n\nAs of 2022-05-13, Multnomah county has the most cases of COVID-19, with 123,906 total cases.\nWashington county has the second most number of COVID-19 cases with 91,092 total cases, followed by Marion (70,744 total cases), Clackamas (63,827 total cases), and Lane (59,853 total cases).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAs of 2022-05-13, Jefferson county has the highest percent of COVID-19 cases per population, with 29.68%.\nUmatilla county has the second highest percent of COVID-19 cases with 28.92% of the population catching COVID-19, followed by Malheur (26.99%), Morrow (25.68%), and Crook (25.23%).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAs of 2022-05-13, Multnomah county has the most COVID-19 related deaths, with 1,207 total deaths.\nMarion county has the second most number of COVID-19 related deaths with 721 total deaths, followed by Clackamas (632 total deaths), Washington (594 total deaths), and Lane (541 total deaths).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAs of 2022-05-13, Harney county has the highest percent of COVID-19 deaths per population, with 0.514%.\nJosephine county has the second highest percent of COVID-19 deaths with 0.3875% of the population dying from COVID-19, followed by Jefferson (0.3731%), Lake (0.3685%), and Douglas (0.3568%).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion\nThe pandemic has caused significant health and economic impacts across the United States and the state of Oregon. Through this data analysis, it was discovered that certain areas were hit harder by the virus than others. Moving forward , it will be crucial to continue tracking and analyzing COVID-19 data to inform public health policy decisions and ensure that resources are allocated effectively to prevent further spread of the virus and mitigate its impacts.\nOne key finding was significant variation in the impact of the pandemic across different regions and communities. While some states and counties were relatively spared from the virus, others experienced a much higher burden of cases and deaths. This emphasizes the importance of targeted interventions and resources to support communities that have been disproportionately affected by the pandemic.\nAnother important insight from this analysis was the role of areas with higher populations. In the future this would be a great area to expand research upon, and look into population density, household incomes, and minority populations. Such information would highlight the need for a comprehensive, equity-focused response to the pandemic that addresses the underlying social determinants of health.\nBy continuing to monitor and analyze COVID-19 data, a deeper understanding of the factors driving the spread of the virus can be gained, and strategies to mitigate the impact can be effectively developed."
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Coronavirus",
    "section": "",
    "text": "This COVID-19 analysis aims to gain insights into the spread and impact of the pandemic in a particular region. To accomplish this I will be using the programming language R to first load the necessary packages that will facilitate data manipulation and visualization. Next I will load the data from various sources, and clean the data to ensure consistency and accuracy. I will then create date data, and totals data to understand the magnitude of the pandemics impact. Then localization data will be created to analyze the spatial distribution of cases and identify hot-spots. Finally, the data will be saved into one list to facilitate easy access and manipulation for further analysis and data visualization. Proper setup and execution of these steps is crucial to the success of this analysis.\n\n\nFor this analysis several packages are used to explore, manipulate, and visualize the data. These packages offer a wide range of functions and capabilities that allow us to efficiently perform data analysis tasks and produce high-quality visualizations.\n\nPackagestidyversetidycensusplotly\n\n\n\ntidyverse : This is the core package used for data manipulation, tidying, data visualization, and reshaping.\ntidycensus : This package will be used to gather census data such as population by state and county.\nplotly : This package will be used to make graphs and maps interactive.\n\n\n\n\n\nInstall\nutils::install.packages(\"tidyverse\")\n\n\n\n\nLoad\nbase::library(tidyverse)\n\n\n\n\n\n\nInstall\nutils::install.packages(\"tidycensus\")\n\n\n\n\nLoad\nbase::library(tidycensus)\n\n\n\n\n\n\nInstall\nutils::install.packages(\"plotly\")\n\n\n\n\nLoad\nbase::library(plotly)\n\n\n\n\n\n\n\n\nThis analysis uses data from two resources. The first data source comes from the New York Times github repository, Coronavirus (Covid-19) Data in the United States. This repository has been widely used by researchers and analysts to track the spread and impact of the virus across the country. Additionally census data from the tidycensus package provides information about the population. The availability and accessibility of these data sources make them valuable tools for analyzing the impact of the pandemic on different communities.\n\nRaw Dataus_covidcounties_covidus_popor_pop\n\n\n\nus_covid : includes the date, state, fips, number of cases, and number of deaths.\ncounties_covid : includes the date, county, state, fips, number of cases, and number of deaths.\nus_pop : includes state, GEOID, variable, and population.\nor_pop : includes county, GEOID, variable, and population.\n\n\n\n\n\nShow Code\nus_covid <- readr::read_csv(\n  'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv')\nutils::head(us_covid)\n\n\n# A tibble: 6 × 5\n  date       state      fips  cases deaths\n  <date>     <chr>      <chr> <dbl>  <dbl>\n1 2020-01-21 Washington 53        1      0\n2 2020-01-22 Washington 53        1      0\n3 2020-01-23 Washington 53        1      0\n4 2020-01-24 Illinois   17        1      0\n5 2020-01-24 Washington 53        1      0\n6 2020-01-25 California 06        1      0\n\n\n\n\n\n\nShow Code\ncounties_covid <- readr::read_csv(\n  'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')\nutils::head(counties_covid)\n\n\n# A tibble: 6 × 6\n  date       county    state      fips  cases deaths\n  <date>     <chr>     <chr>      <chr> <dbl>  <dbl>\n1 2020-01-21 Snohomish Washington 53061     1      0\n2 2020-01-22 Snohomish Washington 53061     1      0\n3 2020-01-23 Snohomish Washington 53061     1      0\n4 2020-01-24 Cook      Illinois   17031     1      0\n5 2020-01-24 Snohomish Washington 53061     1      0\n6 2020-01-25 Orange    California 06059     1      0\n\n\n\n\n\n\nShow Code\nus_pop <- tidycensus::get_estimates(\n    geography = \"state\", \n    year = 2019, \n    variable =  \"POP\") %>% \n  dplyr::rename (\n    \"state\" = NAME, \n    \"population\" = value)\nutils::head(us_pop)\n\n\n# A tibble: 6 × 4\n  state      GEOID variable population\n  <chr>      <chr> <chr>         <dbl>\n1 Alabama    01    POP         4903185\n2 Alaska     02    POP          731545\n3 Arizona    04    POP         7278717\n4 Arkansas   05    POP         3017804\n5 California 06    POP        39512223\n6 Colorado   08    POP         5758736\n\n\n\n\n\n\nShow Code\nor_pop <- tidycensus::get_estimates(\n    geography = \"county\", \n    state = \"OR\", \n    year = 2019, \n    variable = \"POP\") %>% \n  dplyr::rename (\n    \"county\" = NAME, \n    \"population\" = value)\nutils::head(or_pop)\n\n\n# A tibble: 6 × 4\n  county                    GEOID variable population\n  <chr>                     <chr> <chr>         <dbl>\n1 Lane County, Oregon       41039 POP          382067\n2 Washington County, Oregon 41067 POP          601592\n3 Clatsop County, Oregon    41007 POP           40224\n4 Jackson County, Oregon    41029 POP          220944\n5 Grant County, Oregon      41023 POP            7199\n6 Clackamas County, Oregon  41005 POP          418187\n\n\n\n\n\n\n\n\nBefore any meaningful insights can be derived from a data set, it must first be cleaned and pre-processed to remove errors and inconsistencies. This data cleaning involves filtering, removing excess information, and joining data sets. The goal of data cleaning is to ensure that the data set is accurate, complete, and ready for analysis.\n\nClean Dataor_covidor_pop$countyus_joinor_join\n\n\n\nor_covid : filter counties_covid data for state = “Oregon”.\nor_pop$county : remove ” County, Oregon” from or_pop county column.\nus_join : joins us_covid data with us_pop data.\nor_join : joins or_covid data with or_pop data.\n\n\n\n\n\nShow Code\nor_covid <- counties_covid %>%\n  dplyr::filter(\n    state == \"Oregon\")\nutils::head(or_covid)\n\n\n# A tibble: 6 × 6\n  date       county     state  fips  cases deaths\n  <date>     <chr>      <chr>  <chr> <dbl>  <dbl>\n1 2020-02-28 Washington Oregon 41067     1      0\n2 2020-02-29 Washington Oregon 41067     1      0\n3 2020-03-01 Washington Oregon 41067     2      0\n4 2020-03-02 Washington Oregon 41067     2      0\n5 2020-03-03 Washington Oregon 41067     2      0\n6 2020-03-04 Washington Oregon 41067     2      0\n\n\n\n\n\n\nShow Code\nor_pop$county <- base::gsub(\n  \" County, Oregon\", \n  \"\", \n  or_pop$county)\nutils::head(or_pop)\n\n\n# A tibble: 6 × 4\n  county     GEOID variable population\n  <chr>      <chr> <chr>         <dbl>\n1 Lane       41039 POP          382067\n2 Washington 41067 POP          601592\n3 Clatsop    41007 POP           40224\n4 Jackson    41029 POP          220944\n5 Grant      41023 POP            7199\n6 Clackamas  41005 POP          418187\n\n\n\n\n\n\nShow Code\nus_join <- us_covid %>%\n  dplyr::select(\n    date, \n    state, \n    cases, \n    deaths\n    ) %>%\n  dplyr::full_join(\n    us_pop %>%\n      dplyr::select(\n        state, \n        population\n        ),\n    by = c(\"state\" = \"state\")) %>%\n  dplyr::summarise(\n    date = date,\n    state = state,\n    population = population,\n    cases = cases,\n    cases_per_pop = cases/population,\n    deaths = deaths,\n    deaths_per_pop = deaths/population\n    )\nutils::head(us_join)\n\n\n# A tibble: 6 × 7\n  date       state      population cases cases_per_pop deaths deaths_per_pop\n  <date>     <chr>           <dbl> <dbl>         <dbl>  <dbl>          <dbl>\n1 2020-01-21 Washington    7614893     1  0.000000131       0              0\n2 2020-01-22 Washington    7614893     1  0.000000131       0              0\n3 2020-01-23 Washington    7614893     1  0.000000131       0              0\n4 2020-01-24 Illinois     12671821     1  0.0000000789      0              0\n5 2020-01-24 Washington    7614893     1  0.000000131       0              0\n6 2020-01-25 California   39512223     1  0.0000000253      0              0\n\n\n\n\n\n\nShow Code\nor_join <- or_covid %>%\n  dplyr::select(\n    date, \n    state,\n    county,\n    cases, \n    deaths\n    ) %>%\n  dplyr::full_join(\n    or_pop %>%\n      select(\n        county, \n        population\n        ),\n    by = c(\"county\" = \"county\")) %>%\n  dplyr::summarise(\n    date = date,\n    county = county,\n    population = population,\n    cases = cases,\n    cases_per_pop = cases/population,\n    deaths = deaths,\n    deaths_per_pop = deaths/population\n    )\nutils::head(or_join)\n\n\n# A tibble: 6 × 7\n  date       county     population cases cases_per_pop deaths deaths_per_pop\n  <date>     <chr>           <dbl> <dbl>         <dbl>  <dbl>          <dbl>\n1 2020-02-28 Washington     601592     1    0.00000166      0              0\n2 2020-02-29 Washington     601592     1    0.00000166      0              0\n3 2020-03-01 Washington     601592     2    0.00000332      0              0\n4 2020-03-02 Washington     601592     2    0.00000332      0              0\n5 2020-03-03 Washington     601592     2    0.00000332      0              0\n6 2020-03-04 Washington     601592     2    0.00000332      0              0\n\n\n\n\n\n\n\n\nData can become outdated quickly, and using old data can lead to inaccurate or incomplete conclusions. By recording the date the data was obtained, the analysis can be based on the most recent information, and any changes that may have occurred in the data over time can be taken into account.\n\nDate Dataus_data_dateor_data_date\n\n\n\nus_data_date : the most current date of data for us_join.\nor_data_date : the most current date of data for or_join.\n\n\n\n\n\nShow Code\nus_data_date <- us_join %>%\n  dplyr::arrange(dplyr::desc(date))\nus_data_date <- us_data_date[[1,1]]\nus_data_date\n\n\n[1] \"2023-03-07\"\n\n\n\n\n\n\nShow Code\nor_data_date <- or_join %>%\n  dplyr::arrange(dplyr::desc(date))\nor_data_date <- or_data_date[[1,1]]\nor_data_date\n\n\n[1] \"2022-05-13\"\n\n\n\n\n\n\n\n\nCollecting the total number of COVID-19 related cases, and deaths is a critical component of understanding the impact of the pandemic. By collecting this data, we can determine which regions have been most affected by COVID-19, potential areas of concern, and evaluate the progression of the pandemic over time. Overall, this data is essential for understanding the scope and impact of the pandemic.\n\nTotals Dataus_totalsor_totals\n\n\n\nus_totals : includes state, total_cases, total_cases_perc, total_deaths, total_deaths_perc, and population.\nor_totals : includes county, total_cases, total_cases_perc, total_deaths, total_deaths_per, and population.\n\n\n\n\n\nShow Code\nus_totals <- us_join %>%\n  dplyr::filter(date == us_data_date) %>%\n  dplyr::group_by(state) %>%\n  dplyr::summarise(\n    total_cases = cases,\n    total_cases_perc = cases_per_pop,\n    total_deaths = deaths,\n    total_deaths_perc = deaths_per_pop\n  ) %>%\n  dplyr::full_join(us_pop %>%\n              dplyr::select(state, population),\n            by = c(\"state\" = \"state\")) \nutils::head(us_totals)\n\n\n# A tibble: 6 × 6\n  state          total_cases total_cases_perc total_deaths total_death…¹ popul…²\n  <chr>                <dbl>            <dbl>        <dbl>         <dbl>   <dbl>\n1 Alabama            1642062            0.335        21511       0.00439  4.90e6\n2 Alaska              307958            0.421         1438       0.00197  7.32e5\n3 American Samoa        8320           NA               34      NA       NA     \n4 Arizona            2440294            0.335        33077       0.00454  7.28e6\n5 Arkansas           1006336            0.333        13013       0.00431  3.02e6\n6 California        12112791            0.307       103753       0.00263  3.95e7\n# … with abbreviated variable names ¹​total_deaths_perc, ²​population\n\n\n\n\n\n\nShow Code\nor_totals <- or_join %>%\n  dplyr::filter(date == or_data_date) %>%\n  dplyr::group_by(county) %>%\n  dplyr::summarise(\n    total_cases = cases,\n    total_cases_perc = cases_per_pop,\n    total_deaths = deaths,\n    total_deaths_perc = deaths_per_pop\n  ) %>%\n  dplyr::full_join(or_pop %>%\n              dplyr::select(county, population),\n            by = c(\"county\" = \"county\")) \nutils::head(or_totals)\n\n\n# A tibble: 6 × 6\n  county    total_cases total_cases_perc total_deaths total_deaths_perc popula…¹\n  <chr>           <dbl>            <dbl>        <dbl>             <dbl>    <dbl>\n1 Baker            3231            0.200           48          0.00298     16124\n2 Benton          16301            0.175           71          0.000763    93053\n3 Clackamas       63827            0.153          632          0.00151    418187\n4 Clatsop          4810            0.120           50          0.00124     40224\n5 Columbia         7987            0.153           95          0.00181     52354\n6 Coos            10849            0.168          153          0.00237     64487\n# … with abbreviated variable name ¹​population\n\n\n\n\n\n\n\n\nCollecting localization (latitude and longitude) data is crucial for creating maps that illustrate the spread of the pandemic. By collecting this data, we can plot the locations of COVID-19 cases, and deaths. Mapping this data can help identify geographic clusters of cases and assess the spatial distribution of the pandemic.\n\nLocation Dataus_statesor_coutiesus_totals_lat_longor_totals_lat_lon\n\n\n\nus_states : includes lat, long, group, order, and region.\nor_counties : includes lon, lat, group, and county.\nus_totals_lat_long : includes state, total_cases, total_cases_perc, total_deaths, total_deaths_perc, population, lat, long, and group.\nor_totals_lat_lon : includes county, total_cases, total_cases_perc, total_deaths, total_deaths_perc, population, lat, long, and group.\n\n\n\n\n\nShow Code\nus_states <- ggplot2::map_data(\"state\") \nutils::head(us_states)\n\n\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      <NA>\n2 -87.48493 30.37249     1     2 alabama      <NA>\n3 -87.52503 30.37249     1     3 alabama      <NA>\n4 -87.53076 30.33239     1     4 alabama      <NA>\n5 -87.57087 30.32665     1     5 alabama      <NA>\n6 -87.58806 30.32665     1     6 alabama      <NA>\n\n\n\n\n\n\nShow Code\nor_counties <- ggplot2::map_data(\n  \"county\", \n  \"oregon\") %>%\n  dplyr::select(lon = long, \n         lat, \n         group, \n         county = subregion)\nutils::head(or_counties)\n\n\n        lon      lat group county\n1 -117.2042 44.30683     1  baker\n2 -117.4907 44.30683     1  baker\n3 -117.4907 44.38704     1  baker\n4 -117.5366 44.42142     1  baker\n5 -117.5709 44.42142     1  baker\n6 -117.5996 44.43861     1  baker\n\n\n\n\n\n\nShow Code\n# To join data by state and region then both  \n# columns need to have a similar case structure.\nus_totals$state <- stringr::str_to_title(\n  us_totals$state)\nus_states$state <- stringr::str_to_title(\n  us_states$region)\n# join us_totals with lat long data\nus_totals_lat_long <- us_totals  %>%\n  dplyr::full_join(\n    us_states %>%\n      dplyr::select(\n        long, \n        lat, \n        group, \n        state\n        ),\n    by = c(\"state\" = \"state\")) %>%\n  dplyr::filter(\n    !is.na(date),\n    !is.na(lat),\n    !is.na(long)\n    ) %>%\n  dplyr::arrange(\n    state\n    )\nutils::head(us_totals_lat_long)\n\n\n# A tibble: 6 × 9\n  state   total_cases total_cases_perc total…¹ total…² popul…³  long   lat group\n  <chr>         <dbl>            <dbl>   <dbl>   <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 Alabama     1642062            0.335   21511 0.00439 4903185 -87.5  30.4     1\n2 Alabama     1642062            0.335   21511 0.00439 4903185 -87.5  30.4     1\n3 Alabama     1642062            0.335   21511 0.00439 4903185 -87.5  30.4     1\n4 Alabama     1642062            0.335   21511 0.00439 4903185 -87.5  30.3     1\n5 Alabama     1642062            0.335   21511 0.00439 4903185 -87.6  30.3     1\n6 Alabama     1642062            0.335   21511 0.00439 4903185 -87.6  30.3     1\n# … with abbreviated variable names ¹​total_deaths, ²​total_deaths_perc,\n#   ³​population\n\n\n\n\n\n\nShow Code\n# To join data by county then both  \n# columns need to have a similar case structure.\nor_totals$county <- stringr::str_to_title(\n  or_totals$county)\nor_counties$county <- stringr::str_to_title(\n  or_counties$county)\n# join or_totals with or_counties, remove na values from date .. \nor_totals_lat_lon <- or_totals %>%\n  dplyr::full_join(\n    or_counties %>%\n      dplyr::select(\n        lat, \n        lon, \n        group, \n        county),\n    by = c(\"county\" = \"county\")\n    ) %>%\n  dplyr::filter(\n    !is.na(date)\n    ) %>%\n  dplyr::arrange(county)\nutils::head(or_totals_lat_lon)\n\n\n# A tibble: 6 × 9\n  county total_cases total_cases_perc total_…¹ total…² popul…³   lat   lon group\n  <chr>        <dbl>            <dbl>    <dbl>   <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 Baker         3231            0.200       48 0.00298   16124  44.3 -117.     1\n2 Baker         3231            0.200       48 0.00298   16124  44.3 -117.     1\n3 Baker         3231            0.200       48 0.00298   16124  44.4 -117.     1\n4 Baker         3231            0.200       48 0.00298   16124  44.4 -118.     1\n5 Baker         3231            0.200       48 0.00298   16124  44.4 -118.     1\n6 Baker         3231            0.200       48 0.00298   16124  44.4 -118.     1\n# … with abbreviated variable names ¹​total_deaths, ²​total_deaths_perc,\n#   ³​population\n\n\n\n\n\n\n\n\nThe pandemic has generated an enormous amount of data. This data is often complex, messy, and collected from different sources, making it difficult to draw meaningful insights. By arranging the data in a clear and structured manner, analyst can easily identify patterns and trends, track the progression of the pandemic, and develop evidence-based recommendations for policymakers and public health officials.\n\nArranged Dataus_case_numus_case_percentus_deaths_numus_deaths_percentor_case_numor_case_percentor_deaths_numor_deaths_percent\n\n\n\nus_case_num : includes state, population, cases, and cases_per_pop arranged in descending order by cases.\nus_case_percent : includes state, population, cases, and cases_per_pop arranged in descending order by percent of cases (cases_per_pop).\nus_deaths_num : includes state, population, deaths, and deaths_per_pop arranged in descending order by deaths.\nus_deaths_percent : includes state, population, deaths, and deaths_per_pop arranged in descending order by percent of deaths (deaths_per_pop)\nor_case_num : includes county, population, cases, and cases_per_pop arranged in descending order by cases.\nor_case_percent : includes county, population, cases, and cases_per_pop arranged in descending order by percent of cases (cases_per_pop).\nor_deaths_num : includes county, population, deaths, and deaths_per_pop arranged in descending order by deaths.\nor_deaths_percent : includes county, population, deaths, and deaths_per_pop arranged in descending order by deaths.\n\n\n\n\n\nShow Code\nus_case_num <- us_join %>%\n  dplyr::filter(\n    date == us_data_date\n    ) %>%\n  dplyr::select(\n    state,\n    population,\n    cases,\n    cases_per_pop\n    ) %>%\n  dplyr::arrange(dplyr::desc(cases))\n  \nutils::head(us_case_num)\n\n\n# A tibble: 6 × 4\n  state        population    cases cases_per_pop\n  <chr>             <dbl>    <dbl>         <dbl>\n1 California     39512223 12112791         0.307\n2 Texas          28995881  8337836         0.288\n3 Florida        21477737  7531055         0.351\n4 New York       19453561  6786691         0.349\n5 Illinois       12671821  4080183         0.322\n6 Pennsylvania   12801989  3520978         0.275\n\n\n\n\n\n\nShow Code\nus_case_percent <- us_join %>%\n  dplyr::filter(\n    date == us_data_date\n    ) %>%\n  dplyr::select(\n    state,\n    population,\n    cases,\n    cases_per_pop\n    ) %>%\n  dplyr::arrange(dplyr::desc(\n    cases_per_pop\n    ))\nutils::head(us_case_percent)\n\n\n# A tibble: 6 × 4\n  state         population   cases cases_per_pop\n  <chr>              <dbl>   <dbl>         <dbl>\n1 Rhode Island     1059361  460045         0.434\n2 Alaska            731545  307958         0.421\n3 Kentucky         4467673 1718471         0.385\n4 North Dakota      762062  286950         0.377\n5 Tennessee        6829174 2446944         0.358\n6 West Virginia    1792147  641856         0.358\n\n\n\n\n\n\nShow Code\nus_deaths_num <- us_join %>%\n  dplyr::filter(\n    date == us_data_date\n    ) %>%\n  dplyr::select(\n    state,\n    population,\n    deaths,\n    deaths_per_pop\n    ) %>%\n  dplyr::arrange(dplyr::desc(deaths))\nutils::head(us_deaths_num)\n\n\n# A tibble: 6 × 4\n  state        population deaths deaths_per_pop\n  <chr>             <dbl>  <dbl>          <dbl>\n1 California     39512223 103753        0.00263\n2 Texas          28995881  94170        0.00325\n3 Florida        21477737  86850        0.00404\n4 New York       19453561  79689        0.00410\n5 Pennsylvania   12801989  50360        0.00393\n6 Michigan        9986857  42150        0.00422\n\n\n\n\n\n\nShow Code\nus_deaths_percent <- us_join %>%\n  dplyr::filter(\n    date == us_data_date\n    ) %>%\n  dplyr::select(\n    state,\n    population,\n    deaths,\n    deaths_per_pop\n    ) %>%\n  dplyr::arrange(dplyr::desc(deaths_per_pop))\nutils::head(us_deaths_percent)\n\n\n# A tibble: 6 × 4\n  state         population deaths deaths_per_pop\n  <chr>              <dbl>  <dbl>          <dbl>\n1 Arizona          7278717  33077        0.00454\n2 West Virginia    1792147   8062        0.00450\n3 Mississippi      2976149  13379        0.00450\n4 Alabama          4903185  21511        0.00439\n5 New Mexico       2096829   9073        0.00433\n6 Arkansas         3017804  13013        0.00431\n\n\n\n\n\n\nShow Code\nor_case_num <- or_join %>%\n  dplyr::filter(\n    date == or_data_date\n    ) %>%\n  dplyr::select(\n    county,\n    population,\n    cases,\n    cases_per_pop\n    ) %>%\n  dplyr::arrange(dplyr::desc(cases))\nutils::head(or_case_num)\n\n\n# A tibble: 6 × 4\n  county     population  cases cases_per_pop\n  <chr>           <dbl>  <dbl>         <dbl>\n1 Multnomah      812855 123906         0.152\n2 Washington     601592  91092         0.151\n3 Marion         347818  70744         0.203\n4 Clackamas      418187  63827         0.153\n5 Lane           382067  59853         0.157\n6 Deschutes      197692  47906         0.242\n\n\n\n\n\n\nShow Code\nor_case_percent <- or_join %>%\n  dplyr::filter(date == or_data_date) %>%\n  dplyr::select(\n    county,\n    population,\n    cases,\n    cases_per_pop\n  ) %>%\n  dplyr::arrange(dplyr::desc(cases_per_pop))\nutils::head(or_case_percent)\n\n\n# A tibble: 6 × 4\n  county    population cases cases_per_pop\n  <chr>          <dbl> <dbl>         <dbl>\n1 Jefferson      24658  7319         0.297\n2 Umatilla       77950 22545         0.289\n3 Malheur        30571  8251         0.270\n4 Morrow         11603  2980         0.257\n5 Crook          24404  6158         0.252\n6 Deschutes     197692 47906         0.242\n\n\n\n\n\n\nShow Code\nor_deaths_num <- or_join %>%\n  dplyr::filter(\n    date == or_data_date\n    ) %>%\n  dplyr::select(\n    county,\n    population,\n    deaths,\n    deaths_per_pop\n    ) %>%\n  dplyr::arrange(dplyr::desc(deaths))\nutils::head(or_deaths_num)\n\n\n# A tibble: 6 × 4\n  county     population deaths deaths_per_pop\n  <chr>           <dbl>  <dbl>          <dbl>\n1 Multnomah      812855   1207       0.00148 \n2 Marion         347818    721       0.00207 \n3 Clackamas      418187    632       0.00151 \n4 Washington     601592    594       0.000987\n5 Lane           382067    541       0.00142 \n6 Jackson        220944    535       0.00242 \n\n\n\n\n\n\nShow Code\nor_deaths_percent <- or_join %>%\n  dplyr::filter(\n    date == or_data_date\n    ) %>%\n  dplyr::select(\n    county,\n    population,\n    deaths,\n    deaths_per_pop\n    ) %>%\n  dplyr::arrange(dplyr::desc(deaths_per_pop))\nutils::head(or_deaths_percent)\n\n\n# A tibble: 6 × 4\n  county    population deaths deaths_per_pop\n  <chr>          <dbl>  <dbl>          <dbl>\n1 Harney          7393     38        0.00514\n2 Josephine      87487    339        0.00387\n3 Jefferson      24658     92        0.00373\n4 Lake            7869     29        0.00369\n5 Douglas       110980    396        0.00357\n6 Malheur        30571    108        0.00353\n\n\n\n\n\n\n\n\nCollecting all relevant information into a single location is essential for efficient data management and organization. By saving all important data into a list in a single location then it can be easily accessed and manipulated during analysis.\n\n\n\n\nShow Code\n# Save data into a list. \ndata_list <- base::list(\n  us_join,\n  or_join,\n  us_data_date,\n  or_data_date,\n  us_totals_lat_long,\n  or_totals_lat_lon,\n  us_case_num,\n  us_case_percent,\n  us_deaths_num,\n  us_deaths_percent,\n  or_case_num,\n  or_case_percent,\n  or_deaths_num,\n  or_deaths_percent\n)\n# Save data list into data folder.\nbase::saveRDS(\n  data_list,\n  file = paste0(\n    \"data/\",\n    Sys.Date(),\n    \"data_list.RDS\"))\n\n\n\n\nus_join : which is used to create analysis, and tables.\nor_join : which is used to create analysis, and tables.\nus_data_date : which is used to create analysis, and tables.\nor_data_date : which is used to create analysis, and tables.\nus_totals_lat_long : which is used to create analysis, and maps.\nor_totals_lat_lon : which is used to create analysis, and maps.\nus_case_num : which is used to create analysis and tables.\n\n\n\n\n\n\n\nus_case_percent : which is used to create analysis and tables.\nus_deaths_num : which is used to create analysis and tables.\nus_deaths_percent : which is used to create analysis and tables.\nor_case_num : which is used to create analysis and tables.\nor_case_percent : which is used to create analysis and tables.\nor_deaths_num : which is used to create analysis and tables.\nor_deaths_percent : which is used to create analysis and tables."
  },
  {
    "objectID": "analysis.html#highest-percent-of-cases",
    "href": "analysis.html#highest-percent-of-cases",
    "title": "About",
    "section": "Highest Percent of Cases",
    "text": "Highest Percent of Cases\n\n\nShow Code\nus_case_percent <- data_list[[1]] %>%\n  filter(date == data_list[[3]]) %>%\n  select(\n    state,\n    population,\n    cases,\n    cases_per_pop\n  ) %>%\n  arrange(desc(cases_per_pop))\n\ntable <- gt(us_case_percent[1:5,]) %>%\n  fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0) %>%\n  tab_header(\n    title = md(\n      \"**Highest Percent of Cases By State**\"\n      ),\n    subtitle = paste0(\n      \"By State as of \", \n      data_list[[3]])\n  ) %>%\n  cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    cases = md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(style = list(\n    cell_fill(color = \"#feebe2\")\n  ),\n    locations = cells_body(\n      columns = everything()\n    ))\n\ntable\n\n\n\n\n\n\n  \n    \n      Highest Percent of Cases By State\n    \n    \n      By State as of 2023-03-02\n    \n  \n  \n    \n      State\n      Population\n      Cases\n      Percentage\n    \n  \n  \n    Rhode Island\n1,059,361\n460,045\n43%\n    Alaska\n731,545\n307,377\n42%\n    Kentucky\n4,467,673\n1,713,220\n38%\n    North Dakota\n762,062\n286,247\n38%\n    Tennessee\n6,829,174\n2,446,944\n36%\n  \n  \n  \n\n\n\n\nShow Code\nhead(us_case_percent)\n\n\n# A tibble: 6 × 4\n  state         population   cases cases_per_pop\n  <chr>              <dbl>   <dbl>         <dbl>\n1 Rhode Island     1059361  460045         0.434\n2 Alaska            731545  307377         0.420\n3 Kentucky         4467673 1713220         0.383\n4 North Dakota      762062  286247         0.376\n5 Tennessee        6829174 2446944         0.358\n6 West Virginia    1792147  641856         0.358"
  },
  {
    "objectID": "00_code/Rmd/report.html",
    "href": "00_code/Rmd/report.html",
    "title": "Report",
    "section": "",
    "text": "This is a simpler report that prints out a table."
  },
  {
    "objectID": "04_website/figs.html#tables-1",
    "href": "04_website/figs.html#tables-1",
    "title": "Figures",
    "section": "Tables",
    "text": "Tables\n\n\n\n\n\n\n\n\ncases_tb <- or_current %>%\n  select(County, Population, Cases, cases_per_pop) %>% \n  arrange(desc(cases_per_pop)) %>%\n  head(5) %>%\n  gt::gt()\ncases_tb\n\n\n\n\n\n  \n  \n    \n      County\n      Population\n      Cases\n      cases_per_pop\n    \n  \n  \n    Jefferson\n24658\n7319\n0.2968205\n    Umatilla\n77950\n22545\n0.2892239\n    Malheur\n30571\n8251\n0.2698963\n    Morrow\n11603\n2980\n0.2568301\n    Crook\n24404\n6158\n0.2523357"
  },
  {
    "objectID": "04_website/index.html",
    "href": "04_website/index.html",
    "title": "About",
    "section": "",
    "text": "Project Updated: 2022-11-30 \\(\\quad\\) | \\(\\quad\\) US Data Updated: 2022-06-06 \\(\\quad\\)|\\(\\quad\\) County Data Update : 2022-05-13\n\n\n\n\n\nFootnotes\n\n\nWorld Health Organization Coronavirus disease (COVID-19). 2022.↩︎\nNew York Times Covid 19 Data.↩︎\ntidycensus.↩︎"
  },
  {
    "objectID": "04_website/contact.html",
    "href": "04_website/contact.html",
    "title": "Contact",
    "section": "",
    "text": "Blog \\(\\quad\\)|\\(\\quad\\) Github \\(\\quad\\)|\\(\\quad\\) Linkedin"
  },
  {
    "objectID": "analysis.html#cases",
    "href": "analysis.html#cases",
    "title": "Analysis",
    "section": "Cases",
    "text": "Cases\n\n\nAs of 2023-03-06, the following states have been experiencing high volumes of COVID-19 cases:\n\nThe state with the most cases of COVID-19 is California with 12,111,875 total cases.\nFollowed by Texas with 8,337,836 total cases\nThen, Florida (7,531,055 total cases), New York (6,785,652 total cases), and Illinois (4,080,183 total cases).\n\n\n\n\n\n\n\n\nShow Code\nus_case_num_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = cases,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Number of Cases\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\"))\nggplotly(us_case_num_graph)\n\n\n\n\n\n\n\n\nShow Code\nus_case_num_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_cases\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    ) \nggplotly(us_case_num_map)"
  },
  {
    "objectID": "analysis.html#deaths",
    "href": "analysis.html#deaths",
    "title": "Analysis",
    "section": "Deaths",
    "text": "Deaths\n\nHighest Number of DeathsHighest Percent of Deaths\n\n\n\n\n\n\n\n\n  \n    \n      Highest Number of Deaths\n    \n    \n      By counties in Oregon as of 2022-05-13\n    \n  \n  \n    \n      County\n      Population\n      Deaths\n      Percentage\n    \n  \n  \n    Multnomah\n812,855\n1,207\n0.15%\n    Marion\n347,818\n721\n0.21%\n    Clackamas\n418,187\n632\n0.15%\n    Washington\n601,592\n594\n0.10%\n    Lane\n382,067\n541\n0.14%\n  \n  \n  \n\n\n\n\n\n\nArrange Data\nor_deaths_num <- data_list[[2]] %>%\n  filter(date == data_list[[4]]) %>%\n  select(\n    county,\n    population,\n    deaths,\n    deaths_per_pop\n  ) %>%\n  arrange(desc(deaths))\n\n\n\n\nCreate Table\nor_deaths_num_table <- gt(or_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By counties in Oregon as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#feebe2\"),\n                 cell_text(color = \"#6c464e\")),\n    locations = cells_body(\n      columns = everything()\n    ))\n\n\n\n\n\n\n\n\n\n\n  \n    \n      Highest Percent of Deaths\n    \n    \n      By counties in Oregon as of 2022-05-13\n    \n  \n  \n    \n      County\n      Population\n      Deaths\n      Percentage\n    \n  \n  \n    Harney\n7,393\n38\n0.51%\n    Josephine\n87,487\n339\n0.39%\n    Jefferson\n24,658\n92\n0.37%\n    Lake\n7,869\n29\n0.37%\n    Douglas\n110,980\n396\n0.36%\n  \n  \n  \n\n\n\n\n\n\nArrange Data\nor_death_percent <- data_list[[2]] %>%\n  filter(date == data_list[[4]]) %>%\n  select(\n    county,\n    population,\n    deaths,\n    deaths_per_pop\n  ) %>%\n  arrange(desc(deaths_per_pop))\n\n\n\n\nCreate Table\nor_deaths_perc_table <- gt(or_death_percent[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By counties in Oregon as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#feebe2\"),\n                 cell_text(color = \"#6c464e\")),\n    locations = cells_body(\n      columns = everything()\n    ))"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Comments, questions, and suggestions regarding this COVID-19 analysis are encouraged. Please feel free to contact me using the information below. I appreciate your interest in this project and look forward to hearing from you. Thank you for your support!"
  },
  {
    "objectID": "analysis.html#number-of-cases",
    "href": "analysis.html#number-of-cases",
    "title": "Analysis",
    "section": "Number of Cases",
    "text": "Number of Cases\n\nHighest Number of CasesTableGraphMap\n\n\nAs of 2023-03-06, the following states have been experiencing high volumes of COVID-19 cases:\n\nThe state with the most cases of COVID-19 is California with 12,111,875 total cases.\nFollowed by Texas with 8,337,836 total cases\nThen, Florida (7,531,055 total cases), New York (6,785,652 total cases), and Illinois (4,080,183 total cases).\n\n\n\n\n\n\n\n\n\nShow Code\nus_case_num_table <- gt::gt(\n  us_case_num[1:5,]) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Number of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By State as of \", \n      data_list[[3]])\n  ) %>%\n  gt::cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    cases = md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gtsave(\n    filename = \"tables/current_us_case_num.png\"\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nus_case_num_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = cases,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Number of Cases\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nus_case_num_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_cases\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#percent-of-cases",
    "href": "analysis.html#percent-of-cases",
    "title": "Analysis",
    "section": "Percent of Cases",
    "text": "Percent of Cases\n\nHighest Percent of CasesTableGraphMap\n\n\n\n\n\nAs of 2023-03-06, Rhode Island has the highest percent of COVID-19 cases per population, with 43.43%.\nAlaska has the second highest percent of COVID-19 cases with 42.02% of the population catching COVID-19, followed by Kentucky (38.46%), North Dakota (37.65%), and Tennessee (35.83%).\n\n\n\n\n\n\n\n\n\nShow Code\nus_case_percent_table <- gt::gt(\n  us_case_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Percent of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By State as of \", \n      data_list[[3]])\n  ) %>%\n  gt::cols_label(\n    state = gt::md(\n      \"**State**\"\n      ),\n    population = gt::md(\n      \"**Population**\"\n      ),\n    cases = gt::md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = gt::md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_case_percent.png\"\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nus_case_perc_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = cases_per_pop,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Percent of Cases\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Percent of Cases\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    ) + \n  scale_y_continuous(\n    labels = scales::percent\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nus_cases_perc_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_cases_perc\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Percent of Cases\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#number-of-deaths",
    "href": "analysis.html#number-of-deaths",
    "title": "Analysis",
    "section": "Number of Deaths",
    "text": "Number of Deaths\n\nHighest Number of DeathsTableGraphMap\n\n\n\n\n\nAs of 2023-03-06, California has the most COVID-19 related deaths, with 103,743 total deaths.\nTexas has the second most number of COVID-19 related deaths with 94,163 total deaths, followed by Florida (86,850 total deaths), New York (79,680 total deaths), and Pennsylvania (50,360 total deaths).\n\n\n\n\n\n\n\n\n\nShow Code\nus_deaths_num_table <- gt(us_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_num.png\"\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nus_death_num_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = deaths,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Number of Deaths\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Number of Deaths\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nus_death_num_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_deaths\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Number of Deaths\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#percent-of-deaths",
    "href": "analysis.html#percent-of-deaths",
    "title": "Analysis",
    "section": "Percent of Deaths",
    "text": "Percent of Deaths\n\nHighest Percent of DeathsTableGraphMap\n\n\n\n\n\nAs of 2023-03-06, Arizona has the highest percent of COVID-19 deaths per population, with 0.454%.\nWest Virginia has the second highest percent of COVID-19 deaths with 0.45% of the population dying from COVID-19, followed by Mississippi (0.45%), Alabama (0.439%), and New Mexico (0.433%).\n\n\n\n\n\n\n\n\n\n\nShow Code\nus_deaths_perc_table <- gt::gt(\n  us_death_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  gt::tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  gt::cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_percent.png\"\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nus_death_perc_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = deaths_per_pop,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Percent of Deaths\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Percent of Deaths\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    ) + \n  scale_y_continuous(\n    labels = scales::percent\n    )\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nus_death_perc_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_deaths_perc\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Percent of Deaths\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#number-of-cases-1",
    "href": "analysis.html#number-of-cases-1",
    "title": "Analysis",
    "section": "Number of Cases",
    "text": "Number of Cases\n\nHighest Number of CasesTableGraphMap\n\n\n\n\n\nAs of 2022-05-13, Multnomah county has the most cases of COVID-19, with 123,906 total cases.\nWashington county has the second most number of COVID-19 cases with 91,092 total cases, followed by Marion (70,744 total cases), Clackamas (63,827 total cases), and Lane (59,853 total cases).\n\n\n\n\n\n\n\n\n  \n    \n      Highest Number of Cases\n    \n    \n      By counties in Oregon as of 2022-05-13\n    \n  \n  \n    \n      County\n      Population\n      Cases\n      Percentage\n    \n  \n  \n    Multnomah\n812,855\n123,906\n15%\n    Washington\n601,592\n91,092\n15%\n    Marion\n347,818\n70,744\n20%\n    Clackamas\n418,187\n63,827\n15%\n    Lane\n382,067\n59,853\n16%\n  \n\n\n\n\n\n\nCreate Table\nor_case_num_table <- gt(or_case_num[1:5,]) %>%\n  fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Cases**\"\n      ),\n    subtitle = paste0(\n      \"By counties in Oregon as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    cases = md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#feebe2\"),\n                 cell_text(color = \"#6c464e\")),\n    locations = cells_body(\n      columns = everything()\n    ))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nor_case_num_graph <- data_list[[2]] %>%\n  ggplot(aes(\n    x = date,\n    y = cases,\n    color = county\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Number of Cases\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nor_case_num_map <- data_list[[6]] %>%\n  ggplot(\n    aes(\n      lon,\n      lat,\n      group = group,\n      fill = total_cases\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#percent-of-cases-1",
    "href": "analysis.html#percent-of-cases-1",
    "title": "Analysis",
    "section": "Percent of Cases",
    "text": "Percent of Cases\n\nHighest Percent of CasesTableGraphMap\n\n\n\n\n\n\n\n\n\n\nShow Code\nus_case_percent_table <- gt::gt(\n  us_case_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Percent of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By State as of \", \n      data_list[[3]])\n  ) %>%\n  gt::cols_label(\n    state = gt::md(\n      \"**State**\"\n      ),\n    population = gt::md(\n      \"**Population**\"\n      ),\n    cases = gt::md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = gt::md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_case_percent.png\"\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nus_case_perc_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = cases_per_pop,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Percent of Cases\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Percent of Cases\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    ) + \n  scale_y_continuous(\n    labels = scales::percent\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nus_cases_perc_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_cases_perc\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Percent of Cases\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#number-of-deaths-1",
    "href": "analysis.html#number-of-deaths-1",
    "title": "Analysis",
    "section": "Number of Deaths",
    "text": "Number of Deaths\n\nHighest Number of DeathsTableGraphMap\n\n\n\n\n\nAs of 2023-03-06, California has the most COVID-19 related deaths, with 103,743 total deaths.\nTexas has the second most number of COVID-19 related deaths with 94,163 total deaths, followed by Florida (86,850 total deaths), New York (79,680 total deaths), and Pennsylvania (50,360 total deaths).\n\n\n\n\n\n\n\n\n\nShow Code\nus_deaths_num_table <- gt(us_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_num.png\"\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nus_death_num_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = deaths,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Number of Deaths\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Number of Deaths\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nus_death_num_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_deaths\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Number of Deaths\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#percent-of-deaths-1",
    "href": "analysis.html#percent-of-deaths-1",
    "title": "Analysis",
    "section": "Percent of Deaths",
    "text": "Percent of Deaths\n\nHighest Percent of DeathsTableGraphMap\n\n\n\n\n\nAs of 2023-03-06, Arizona has the highest percent of COVID-19 deaths per population, with 0.454%.\nWest Virginia has the second highest percent of COVID-19 deaths with 0.45% of the population dying from COVID-19, followed by Mississippi (0.45%), Alabama (0.439%), and New Mexico (0.433%).\n\n\n\n\n\n\n\n\n\n\nShow Code\nus_deaths_perc_table <- gt::gt(\n  us_death_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  gt::tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  gt::cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_percent.png\"\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nus_death_perc_graph <- data_list[[1]] %>%\n  ggplot(aes(\n    x = date,\n    y = deaths_per_pop,\n    color = state\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Percent of Deaths\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Percent of Deaths\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    ) + \n  scale_y_continuous(\n    labels = scales::percent\n    )\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nus_death_perc_map <- data_list[[5]] %>%\n  ggplot(\n    aes(\n      long,\n      lat,\n      group = group,\n      fill = total_deaths_perc\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Percent of Deaths\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "Conclusion",
    "section": "",
    "text": "The pandemic has caused significant health and economic impacts across the United States and the state of Oregon. Through this data analysis, it was discovered that certain areas were hit harder by the virus than others. Moving forward , it will be crucial to continue tracking and analyzing COVID-19 data to inform public health policy decisions and ensure that resources are allocated effectively to prevent further spread of the virus and mitigate its impacts.\nOne key finding was significant variation in the impact of the pandemic across different regions and communities. While some states and counties were relatively spared from the virus, others experienced a much higher burden of cases and deaths. This emphasizes the importance of targeted interventions and resources to support communities that have been disproportionately affected by the pandemic.\nAnother important insight from this analysis was the role of areas with higher populations. In the future this would be a great area to expand research upon, and look into population density, household incomes, and minority populations. Such information would highlight the need for a comprehensive, equity-focused response to the pandemic that addresses the underlying social determinants of health.\nBy continuing to monitor and analyze COVID-19 data, a deeper understanding of the factors driving the spread of the virus can be gained, and strategies to mitigate the impact can be effectively developed."
  },
  {
    "objectID": "conclusion.html#united-states-covid-impact",
    "href": "conclusion.html#united-states-covid-impact",
    "title": "Conclusion",
    "section": "United States COVID Impact",
    "text": "United States COVID Impact"
  },
  {
    "objectID": "conclusion.html#united-states-covid-19-impact",
    "href": "conclusion.html#united-states-covid-19-impact",
    "title": "Conclusion",
    "section": "United States COVID-19 Impact",
    "text": "United States COVID-19 Impact"
  },
  {
    "objectID": "analysis.html#percent-of-cases-2",
    "href": "analysis.html#percent-of-cases-2",
    "title": "Analysis",
    "section": "Percent of Cases",
    "text": "Percent of Cases\n\nHighest Percent of CasesTableGraphMap\n\n\n\n\n\nAs of 2022-05-13, Jefferson county has the highest percent of COVID-19 cases per population, with 29.68%.\nUmatilla county has the second highest percent of COVID-19 cases with 28.92% of the population catching COVID-19, followed by Malheur (26.99%), Morrow (25.68%), and Crook (25.23%).\n\n\n\n\n\n\n\n\n  \n    \n      Highest Percent of Cases\n    \n    \n      By counties in Oregon as of 2022-05-13\n    \n  \n  \n    \n      County\n      Population\n      Cases\n      Percentage\n    \n  \n  \n    Jefferson\n24,658\n7,319\n30%\n    Umatilla\n77,950\n22,545\n29%\n    Malheur\n30,571\n8,251\n27%\n    Morrow\n11,603\n2,980\n26%\n    Crook\n24,404\n6,158\n25%\n  \n\n\n\n\n\n\nCreate Table\nor_case_perc_table <- gt(or_case_percent[1:5,]) %>%\n  fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Percent of Cases**\"\n      ),\n    subtitle = paste0(\n      \"By counties in Oregon as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    cases = md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(style = list(\n    cell_fill(color = \"#feebe2\")\n  ),\n    locations = cells_body(\n      columns = everything()\n    ))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nor_case_perc_graph <- data_list[[2]] %>%\n  ggplot(aes(\n    x = date,\n    y = cases_per_pop,\n    color = county\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Percent of Cases\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Percent of Cases\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    ) + \n  scale_y_continuous(\n    labels = scales::percent\n    ) \n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nor_cases_perc_map <- data_list[[6]] %>%\n  ggplot(\n    aes(\n      lon,\n      lat,\n      group = group,\n      fill = total_cases_perc\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Percent of Cases\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#number-of-cases-2",
    "href": "analysis.html#number-of-cases-2",
    "title": "Analysis",
    "section": "Number of Cases",
    "text": "Number of Cases\n\nHighest Number of CasesTableGraphMap\n\n\n\n\n\nAs of 2022-05-13, Multnomah county has the most cases of COVID-19, with 123,906 total cases.\nWashington county has the second most number of COVID-19 cases with 91,092 total cases, followed by Marion (70,744 total cases), Clackamas (63,827 total cases), and Lane (59,853 total cases).\n\n\n\n\n\n\n\n\n  \n    \n      Highest Number of Cases\n    \n    \n      By counties in Oregon as of 2022-05-13\n    \n  \n  \n    \n      County\n      Population\n      Cases\n      Percentage\n    \n  \n  \n    Multnomah\n812,855\n123,906\n15%\n    Washington\n601,592\n91,092\n15%\n    Marion\n347,818\n70,744\n20%\n    Clackamas\n418,187\n63,827\n15%\n    Lane\n382,067\n59,853\n16%\n  \n\n\n\n\n\n\nCreate Table\nor_case_num_table <- gt(or_case_num[1:5,]) %>%\n  fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Cases**\"\n      ),\n    subtitle = paste0(\n      \"By counties in Oregon as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    cases = md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#feebe2\"),\n                 cell_text(color = \"#6c464e\")),\n    locations = cells_body(\n      columns = everything()\n    ))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nor_case_num_graph <- data_list[[2]] %>%\n  ggplot(aes(\n    x = date,\n    y = cases,\n    color = county\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Number of Cases\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nor_case_num_map <- data_list[[6]] %>%\n  ggplot(\n    aes(\n      lon,\n      lat,\n      group = group,\n      fill = total_cases\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Number of Cases\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#number-of-deaths-2",
    "href": "analysis.html#number-of-deaths-2",
    "title": "Analysis",
    "section": "Number of Deaths",
    "text": "Number of Deaths\n\nHighest Number of DeathsTableGraphMap\n\n\n\n\n\nAs of 2022-05-13, Multnomah county has the most COVID-19 related deaths, with 1,207 total deaths.\nMarion county has the second most number of COVID-19 related deaths with 721 total deaths, followed by Clackamas (632 total deaths), Washington (594 total deaths), and Lane (541 total deaths).\n\n\n\n\n\n\n\n\n  \n    \n      Highest Number of Deaths\n    \n    \n      By counties in Oregon as of 2022-05-13\n    \n  \n  \n    \n      County\n      Population\n      Deaths\n      Percentage\n    \n  \n  \n    Multnomah\n812,855\n1,207\n0.15%\n    Marion\n347,818\n721\n0.21%\n    Clackamas\n418,187\n632\n0.15%\n    Washington\n601,592\n594\n0.10%\n    Lane\n382,067\n541\n0.14%\n  \n\n\n\n\n\n\nCreate Table\nor_deaths_num_table <- gt(or_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By counties in Oregon as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#feebe2\"),\n                 cell_text(color = \"#6c464e\")),\n    locations = cells_body(\n      columns = everything()\n    ))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nor_death_num_graph <- data_list[[2]] %>%\n  ggplot(aes(\n    x = date,\n    y = deaths,\n    color = county\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Number of Deaths\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Number of Deaths\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\"))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nor_death_num_map <- data_list[[6]] %>%\n  ggplot(\n    aes(\n      lon,\n      lat,\n      group = group,\n      fill = total_deaths\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Number of Deaths\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#percent-of-deaths-2",
    "href": "analysis.html#percent-of-deaths-2",
    "title": "Analysis",
    "section": "Percent of Deaths",
    "text": "Percent of Deaths\n\nHighest Percent of DeathsTableGraphMap\n\n\n\n\n\nAs of 2022-05-13, Harney county has the highest percent of COVID-19 deaths per population, with 0.514%.\nJosephine county has the second highest percent of COVID-19 deaths with 0.3875% of the population dying from COVID-19, followed by Jefferson (0.3731%), Lake (0.3685%), and Douglas (0.3568%).\n\n\n\n\n\n\n\n\n  \n    \n      Highest Percent of Deaths\n    \n    \n      By counties in Oregon as of 2022-05-13\n    \n  \n  \n    \n      County\n      Population\n      Deaths\n      Percentage\n    \n  \n  \n    Harney\n7,393\n38\n0.51%\n    Josephine\n87,487\n339\n0.39%\n    Jefferson\n24,658\n92\n0.37%\n    Lake\n7,869\n29\n0.37%\n    Douglas\n110,980\n396\n0.36%\n  \n\n\n\n\n\n\nCreate Table\nor_deaths_perc_table <- gt(or_death_percent[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By counties in Oregon as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#feebe2\"),\n                 cell_text(color = \"#6c464e\")),\n    locations = cells_body(\n      columns = everything()\n    ))\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Graph\nor_death_perc_graph <- data_list[[2]] %>%\n  ggplot(aes(\n    x = date,\n    y = deaths_per_pop,\n    color = county\n  )) + \n  geom_line(\n    size = .8\n    ) +\n  scale_x_date(\n    date_breaks = \"1 month\", \n    date_labels = \"%m\") +\n  ggtitle(\n    \"Percent of Deaths\"\n  ) +\n  xlab(\n    \"Month\"\n  ) +\n  ylab(\n    \"Percent of Deaths\"\n  ) + \n  theme(\n    axis.text.x = element_text(\n      angle = 60, \n      vjust = 0.5, \n      hjust=1)\n    ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    ) + \n  scale_y_continuous(\n    labels = scales::percent\n    )\n\n\n\n\n\n\n\n\n\n\n\n\nCreate Map\nor_death_perc_map <- data_list[[6]] %>%\n  ggplot(\n    aes(\n      lon,\n      lat,\n      group = group,\n      fill = total_deaths_perc\n    )\n  ) +\n  geom_polygon(\n    color = \"grey\"\n  ) +\n  coord_quickmap() +\n  theme_minimal() +\n  ggtitle(\n    \"Percent of Deaths\"\n  ) +\n  xlab(\n    \"\"\n  ) +\n  ylab(\n    \"\"\n  ) +\n  theme(\n    text = element_text(\n      size=16, \n      family=\"Times\")\n    )"
  },
  {
    "objectID": "analysis.html#move-to-set-up-page---tables",
    "href": "analysis.html#move-to-set-up-page---tables",
    "title": "Analysis",
    "section": "Move to Set Up Page - Tables",
    "text": "Move to Set Up Page - Tables\n\n\nShow Code\nus_case_num_table <- gt::gt(\n  us_case_num[1:5,]) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Number of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By State as of \", \n      data_list[[3]])\n  ) %>%\n  gt::cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    cases = md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gtsave(\n    filename = \"tables/current_us_case_num.png\"\n    ) \n\n\n\n\nShow Code\nus_case_percent_table <- gt::gt(\n  us_case_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Percent of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By State as of \", \n      data_list[[3]])\n  ) %>%\n  gt::cols_label(\n    state = gt::md(\n      \"**State**\"\n      ),\n    population = gt::md(\n      \"**Population**\"\n      ),\n    cases = gt::md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = gt::md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_case_percent.png\"\n    ) \n\n\n\n\nShow Code\nus_deaths_num_table <- gt(us_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_num.png\"\n    ) \n\n\n\n\nShow Code\nus_deaths_perc_table <- gt::gt(\n  us_death_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  gt::tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  gt::cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_percent.png\"\n    )"
  },
  {
    "objectID": "setup.html#us-tables",
    "href": "setup.html#us-tables",
    "title": "Coronavirus",
    "section": "US Tables",
    "text": "US Tables\n\nus_case_num_tableus_case_percent_tableus_death_num_tableus_death_num_perc\n\n\n\n\nShow Code\nus_case_num_table <- gt::gt(\n  us_case_num[1:5,]) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\"**Highest Number of Cases**\"),\n    subtitle = base::paste0(\n      \"By State as of \", \n      us_data_date)\n  ) %>%\n  gt::cols_label(\n    state = gt::md(\"**State**\"),\n    population = gt::md(\"**Population**\"),\n    cases = gt::md(\"**Cases**\"),\n    cases_per_pop = gt::md(\"**Percentage**\")\n    ) %>%\n  style_table() %>%\n  gt::gtsave(filename = \"tables/current_us_case_num.png\")\n\n\n\n\n\n\nShow Code\nus_case_percent_table <- gt::gt(\n  us_case_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Percent of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By State as of \", \n      data_list[[3]])\n  ) %>%\n  gt::cols_label(\n    state = gt::md(\n      \"**State**\"\n      ),\n    population = gt::md(\n      \"**Population**\"\n      ),\n    cases = gt::md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = gt::md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_case_percent.png\"\n    ) \n\n\n\n\n\n\nShow Code\nus_deaths_num_table <- gt(us_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_num.png\"\n    ) \n\n\n\n\n\n\nShow Code\nus_deaths_perc_table <- gt::gt(\n  us_death_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  gt::tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      data_list[[4]])\n  ) %>%\n  gt::cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_percent.png\"\n    )"
  },
  {
    "objectID": "setup.html#or-tables",
    "href": "setup.html#or-tables",
    "title": "Coronavirus",
    "section": "OR Tables",
    "text": "OR Tables"
  },
  {
    "objectID": "setup.html#tables",
    "href": "setup.html#tables",
    "title": "Coronavirus",
    "section": "Tables",
    "text": "Tables\n\nUSOR\n\n\nus_case_num_table\n\n\nShow Code\nus_case_num_table <- gt::gt(\n  us_case_num[1:5,]) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\"**Highest Number of Cases**\"),\n    subtitle = base::paste0(\n      \"By State as of \", \n      us_data_date)\n  ) %>%\n  gt::cols_label(\n    state = gt::md(\"**State**\"),\n    population = gt::md(\"**Population**\"),\n    cases = gt::md(\"**Cases**\"),\n    cases_per_pop = gt::md(\"**Percentage**\")\n    ) %>%\n  style_table() %>%\n  gt::gtsave(filename = \"tables/current_us_case_num.png\")\n\n\nus_case_percent_table\n\n\nShow Code\nus_case_percent_table <- gt::gt(\n  us_case_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Percent of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By State as of \", \n      us_data_date)\n  ) %>%\n  gt::cols_label(\n    state = gt::md(\n      \"**State**\"\n      ),\n    population = gt::md(\n      \"**Population**\"\n      ),\n    cases = gt::md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = gt::md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_case_percent.png\"\n    ) \n\n\nus_death_num_table\n\n\nShow Code\nus_deaths_num_table <- gt(us_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      us_data_date)\n  ) %>%\n  cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_num.png\"\n    ) \n\n\nus_death_num_perc\n\n\nShow Code\nus_deaths_perc_table <- gt::gt(\n  us_death_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  gt::tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By state as of \", \n      us_data_date)\n  ) %>%\n  gt::cols_label(\n    state = md(\n      \"**State**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_us_deaths_percent.png\"\n    ) \n\n\n\n\nor_case_num_table\n\n\nShow Code\nor_case_num_table <- gt::gt(\n  or_case_num[1:5,]) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\"**Highest Number of Cases**\"),\n    subtitle = base::paste0(\n      \"By county as of \", \n      or_data_date)\n  ) %>%\n  gt::cols_label(\n    county = gt::md(\"**County**\"),\n    population = gt::md(\"**Population**\"),\n    cases = gt::md(\"**Cases**\"),\n    cases_per_pop = gt::md(\"**Percentage**\")\n    ) %>%\n  style_table() %>%\n  gt::gtsave(filename = \"tables/current_or_case_num.png\")\n\n\nor_case_percent_table\n\n\nShow Code\nor_case_percent_table <- gt::gt(\n  or_case_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = cases,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = cases_per_pop,\n    decimals = 0\n    ) %>%\n  gt::tab_header(\n    title = gt::md(\n      \"**Highest Percent of Cases**\"\n      ),\n    subtitle = base::paste0(\n      \"By county as of \", \n      or_data_date)\n  ) %>%\n  gt::cols_label(\n    county = gt::md(\n      \"**County**\"\n      ),\n    population = gt::md(\n      \"**Population**\"\n      ),\n    cases = gt::md(\n      \"**Cases**\"\n      ),\n    cases_per_pop = gt::md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_or_case_percent.png\"\n    ) \n\n\nor_death_num_table\n\n\nShow Code\nor_deaths_num_table <- gt(or_deaths_num[1:5,]) %>%\n  fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  tab_header(\n    title = md(\n      \"**Highest Number of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By county as of \", \n      or_data_date)\n  ) %>%\n  cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_or_deaths_num.png\"\n    ) \n\n\nus_death_num_perc\n\n\nShow Code\nor_deaths_perc_table <- gt::gt(\n  or_death_percent[1:5,]\n  ) %>%\n  gt::fmt_number(\n    columns = deaths,\n    decimals = 0\n  ) %>%\n  gt::fmt_number(\n    columns = population,\n    decimals = 0\n  ) %>%\n  gt::fmt_percent(\n    columns = deaths_per_pop,\n    decimals = 2\n    ) %>%\n  gt::tab_header(\n    title = md(\n      \"**Highest Percent of Deaths**\"\n      ),\n    subtitle = paste0(\n      \"By county as of \", \n      or_data_date)\n  ) %>%\n  gt::cols_label(\n    county = md(\n      \"**County**\"\n      ),\n    population = md(\n      \"**Population**\"\n      ),\n    deaths = md(\n      \"**Deaths**\"\n      ),\n    deaths_per_pop = md(\n      \"**Percentage**\"\n      )\n    ) %>%\n  style_table() %>%\n  gt::gtsave(\n    filename = \"tables/current_or_deaths_percent.png\"\n    )"
  },
  {
    "objectID": "setup.html#style-functions",
    "href": "setup.html#style-functions",
    "title": "Coronavirus",
    "section": "Style Functions",
    "text": "Style Functions\nCreating functions helps automating automating tasks and reducing the overall workload. Specifically, functions can be used to style tables, graphs, and maps consistently throughout the project, ensuring a professional and coherent visual representation of the data. This approach saves time and improves accuracy by reducing the potential for errors when formatting data manually. Additionally, functions can be reused in future projects or shared with other team members, promoting collaboration and consistency in data analysis.\n\nStyle Functionsstyle_table\n\n\n\nstyle_table() : which is used to add footnotes to all the tables, and specify colors.\n\n\n\n\n\nShow Code\nstyle_table <- function(table){\n  tb <- table %>%\n  gt::tab_footnote(\n    footnote = gt::md(\n      \"Table by Randi Bolt </br> Data from New York Times and tidycensus. \"\n      )\n    ) %>%\n  gt::tab_footnote(\n    footnote = gt::md(\n      \"Table by Randi Bolt </br> Data from New York Times and tidycensus. \"\n      )\n    )%>%\n  gt::tab_options(\n    table.background.color = \"#feebe2\",\n    heading.background.color = \"#F7CEB6\",\n    footnotes.background.color = \"#F7CEB6\",\n    # table border\n    table.border.top.color = \"#6c464e\",\n    table.border.bottom.color = \"#6c464e\",\n    table.border.right.color = \"#6c464e\",\n    table.border.left.color = \"#6c464e\",\n    # horizontal table body lines color\n    table_body.hlines.color = \"#6c464e\",\n    # heading bottom border color\n    heading.border.bottom.color =\"#6c464e\",\n    # column label bottom border color\n    column_labels.border.bottom.color = \"#6c464e\"\n  ) %>%\n  gt::opt_table_font(\n    font = \"Times\"\n  )\n  return(tb)\n}"
  }
]